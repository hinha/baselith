name: Release Build and Test

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: baselith-linux-amd64
            main_pkg: ./cmd/baselith
          - os: windows-latest
            goos: windows
            goarch: amd64
            artifact_name: baselith-windows-amd64.exe
            main_pkg: ./cmd/baselith

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with: { go-version: '1.21' }

      - run: go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -trimpath -ldflags "-s -w" -o ${{ matrix.artifact_name }} ${{ matrix.main_pkg }}
          chmod +x ${{ matrix.artifact_name }}
          file ${{ matrix.artifact_name }} || true

      - name: Run tests
        run: go test ./... -v

      - name: Upload Release Asset
        if: ${{ hashFiles(matrix.artifact_name) != '' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
